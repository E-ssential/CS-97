{"ast":null,"code":"var _jsxFileName = \"/home/clonix/Desktop/CS-97/cs-97-react/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setSetName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000'; //check if there are changes in ENDPOINT or location.search\n\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    const socket = io(ENDPOINT);\n    console.log(socket);\n    setSetName(name);\n    setRoom(room);\n    socket.emit('login', {\n      name: name,\n      room: room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]); //check if there is changes in messages\n\n  useEffect(() => socket.on('message', message => {\n    setMessages([...messages, message]);\n  }), [messages]); //Sending message to server\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ChatOuterContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: message,\n    onChange: event => setMessage(event.target.value),\n    onKeyPress: event => {\n      event => event.key === 'Enter' ? sendMessage(event) : null;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/clonix/Desktop/CS-97/cs-97-react/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","Chat","location","name","setSetName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","socket","console","log","emit","off","on","sendMessage","event","preventDefault","target","value","key"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAO,YAAP;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAEzB,QAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBP,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACQ,IAAD,EAAQC,OAAR,IAAmBT,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMc,QAAQ,GAAG,gBAAjB,CANyB,CAQzB;;AACAb,EAAAA,SAAS,CAAC,MAAK;AACX,UAAM;AAACK,MAAAA,IAAD;AAAOE,MAAAA;AAAP,QAAeN,WAAW,CAACa,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAArB;AAEA,UAAMC,MAAM,GAAGd,EAAE,CAACW,QAAD,CAAjB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAGAV,IAAAA,UAAU,CAACD,IAAD,CAAV;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAS,IAAAA,MAAM,CAACG,IAAP,CAAY,OAAZ,EAAqB;AAACd,MAAAA,IAAI,EAAEA,IAAP;AAAaE,MAAAA,IAAI,EAAEA;AAAnB,KAArB,EAA+C,MAC/C,CAEC,CAHD;AAKA,WAAO,MAAM;AACTS,MAAAA,MAAM,CAACG,IAAP,CAAY,YAAZ;AACAH,MAAAA,MAAM,CAACI,GAAP;AACH,KAHD;AAIH,GAnBQ,EAmBN,CAACP,QAAD,EAAWT,QAAQ,CAACW,MAApB,CAnBM,CAAT,CATyB,CA8BzB;;AACAf,EAAAA,SAAS,CAAC,MACVgB,MAAM,CAACK,EAAP,CAAU,SAAV,EAAsBZ,OAAD,IAAW;AAC5BG,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AAGH,GAJD,CADS,EAMN,CAACE,QAAD,CANM,CAAT,CA/ByB,CAuCzB;;AAEA,QAAMW,WAAW,GAAIC,KAAD,IAAU;AAC1BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAGf,OAAH,EAAW;AAEPO,MAAAA,MAAM,CAACG,IAAP,CAAY,aAAZ,EAA2BV,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AAIH;AAEJ,GAVD;;AAYAO,EAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ,EAAqBE,QAArB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,KAAK,EAAEF,OAAd;AACA,IAAA,QAAQ,EAAGc,KAAD,IAASb,UAAU,CAACa,KAAK,CAACE,MAAN,CAAaC,KAAd,CAD7B;AAEA,IAAA,UAAU,EAAEH,KAAK,IAAI;AAACA,MAAAA,KAAK,IAAIA,KAAK,CAACI,GAAN,KAAc,OAAd,GAAwBL,WAAW,CAACC,KAAD,CAAnC,GAA4C,IAArD;AAA0D,KAFhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAWH,CAjED;;AAmEA,eAAepB,IAAf","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nimport './Chat.css';\n\n\nconst Chat = ({location}) => {\n\n    const [name, setSetName] = useState('');\n    const [room , setRoom] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const ENDPOINT = 'localhost:5000';\n\n    //check if there are changes in ENDPOINT or location.search\n    useEffect(() =>{\n        const {name, room} = queryString.parse(location.search)\n\n        const socket = io(ENDPOINT);\n        console.log(socket);\n\n\n        setSetName(name);\n        setRoom(room);\n\n        socket.emit('login', {name: name, room: room}, ()=>\n        {\n            \n        });\n        \n        return () => {\n            socket.emit('disconnect');\n            socket.off();\n        }\n    }, [ENDPOINT, location.search])\n\n    //check if there is changes in messages\n    useEffect(()=>\n    socket.on('message', (message)=>{\n        setMessages([...messages, message])\n\n\n    }\n    ), [messages]);\n\n    //Sending message to server\n\n    const sendMessage = (event) =>{\n        event.preventDefault();\n        if(message){\n\n            socket.emit(\"sendMessage\", message, () => setMessage('')\n            \n            \n            );\n        }\n\n    }\n\n    console.log(message, messages);\n    return(\n        <div className=\"ChatOuterContainer\">\n            <div className=\"container\">  \n                <input value={message} \n                onChange={(event)=>setMessage(event.target.value)}\n                onKeyPress={event => {event => event.key === 'Enter' ? sendMessage(event): null}}/>\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}