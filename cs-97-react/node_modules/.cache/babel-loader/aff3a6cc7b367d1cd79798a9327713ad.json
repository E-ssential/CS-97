{"ast":null,"code":"var _jsxFileName = \"/home/clonix/Desktop/CS-97/cs-97-react/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport ChatInfoBar from '../ChatInfoBar/ChatInfoBar';\nimport MessageList from '../ChatMessages/MessageList';\nimport ChatInput from '../ChatInput/ChatInput';\nimport './Chat.css';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setSetName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setSetName(name);\n    setRoom(room);\n    socket.emit('login', {\n      name: name,\n      room: room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]); //emit sendMessage to server\n\n  const sendMessage = event => {\n    event.preventDefault();\n    socket.emit(\"sendMessage\", message, () => {\n      setMessage('');\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatOuterContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChatInfoBar, {\n    room: room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MessageList, {\n    messages: messages,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ChatInput, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/clonix/Desktop/CS-97/cs-97-react/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","ChatInfoBar","MessageList","ChatInput","socket","Chat","location","name","setSetName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","off","on","sendMessage","event","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAGA,OAAO,YAAP;AAEA,IAAIC,MAAJ;;AACA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAEzB,QAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBX,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACY,IAAD,EAAQC,OAAR,IAAmBb,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMkB,QAAQ,GAAG,gBAAjB;AAGAjB,EAAAA,SAAS,CAAC,MAAK;AACX,UAAM;AAACS,MAAAA,IAAD;AAAOE,MAAAA;AAAP,QAAeV,WAAW,CAACiB,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAArB;AAEAb,IAAAA,MAAM,GAAGJ,EAAE,CAACe,QAAD,CAAX;AAGAP,IAAAA,UAAU,CAACD,IAAD,CAAV;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACc,IAAP,CAAY,OAAZ,EAAqB;AAACX,MAAAA,IAAI,EAAEA,IAAP;AAAaE,MAAAA,IAAI,EAAEA;AAAnB,KAArB,EAA+C,MAC/C,CAEC,CAHD;AAKA,WAAO,MAAM;AACTL,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ;AACAd,MAAAA,MAAM,CAACe,GAAP;AACH,KAHD;AAIH,GAlBQ,EAkBN,CAACJ,QAAD,EAAWT,QAAQ,CAACW,MAApB,CAlBM,CAAT;AAqBAnB,EAAAA,SAAS,CAAC,MAAI;AAEVM,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAsBT,OAAD,IAAa;AAC9BG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACH,KAFD;AAGH,GALQ,EAKN,CAACE,QAAD,CALM,CAAT,CA9ByB,CAqCzB;;AACA,QAAMQ,WAAW,GAAIC,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAnB,IAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA0BP,OAA1B,EAAmC,MAAM;AACrCC,MAAAA,UAAU,CAAC,EAAD,CAAV;AAEH,KAHD;AAIH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEH,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI,oBAAC,WAAD;AACI,IAAA,QAAQ,EAAEI,QADd;AAEI,IAAA,IAAI,EAAEN,IAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAQI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAEI,OADb;AAEI,IAAA,UAAU,EAAEC,UAFhB;AAGI,IAAA,WAAW,EAAES,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ,CADJ;AAmBH,CAjED;;AAmEA,eAAehB,IAAf","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nimport ChatInfoBar from '../ChatInfoBar/ChatInfoBar';\nimport MessageList from '../ChatMessages/MessageList';\nimport ChatInput from '../ChatInput/ChatInput';\n\n\nimport './Chat.css';\n\nlet socket;\nconst Chat = ({location}) => {\n\n    const [name, setSetName] = useState('');\n    const [room , setRoom] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const ENDPOINT = 'localhost:5000';\n\n\n    useEffect(() =>{\n        const {name, room} = queryString.parse(location.search)\n\n        socket = io(ENDPOINT);\n\n\n        setSetName(name);\n        setRoom(room);\n\n        socket.emit('login', {name: name, room: room}, ()=>\n        {\n            \n        });\n        \n        return () => {\n            socket.emit('disconnect');\n            socket.off();\n        }\n    }, [ENDPOINT, location.search])\n\n\n    useEffect(()=>{\n\n        socket.on('message', (message) => {\n            setMessages([...messages, message]);\n        })\n    }, [messages]);\n\n    //emit sendMessage to server\n    const sendMessage = (event) => {\n        event.preventDefault();\n        socket.emit(\"sendMessage\",message, () => {\n            setMessage('');\n\n        });\n    }\n\n    return(\n        <div className=\"chatOuterContainer\">\n            <div className=\"chatContainer\">\n                <ChatInfoBar room={room}/>\n\n                <MessageList\n                    messages={messages}\n                    name={name}\n                />\n\n                <ChatInput \n                    message={message}\n                    setMessage={setMessage}\n                    sendMessage={sendMessage}\n                />\n            </div>\n\n        </div>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}